{
    "WELCOME": "Welcome in the Ionic Location Based Augmented Reality app.",
    "AR_MODULES": "The app is an home made implementation of a location based AR that uses:<br><ul><li>device motion sensors (accelerometer, gyroscope, magnetometer),</li><li>global positioning system (gps)</li><li>a Rest service to retrieve a points of interest list (POI) to show.</li></ul><br>Motion sensors data is optimized using a complementary filter called Sensor Fusion.<br><br>The Rest service is a simple GET call to retrieve user's nearby POIs. It takes user's latitude, longitude and a POI maximum radius as input parameters.",
    "GO_TO_ALGORITHM": "Go to the algorithm",
    "ALGORITHM_HEADER": "In this section there is the explaination of the app based algorithm.<br>All dev configurable values are setted in constants.ts (src/util directory). Rest call endpoint is setted there too, although the service is mocked using a file poi-list.json.<br>The deployment machine baseUrl of the service is cofigured in the environment.ts and environment.prod.ts files (the last one is used with --prod flag Ionic execution). Here it is deactivable mock service execution too, switching mock flag to false.",
    "ALGORITHM_CONTENT": "<ol><li>Camera preview activation as view background, and camera field of view angle (FOV) retrieve.</li><li>Activation of gps and fusion sensors (accelerometer, gyroscope, magnetomer).</li>                     <li>At the arrive of gps data, verify if it is far from the previous one (if there is; if not use this position) for at least a gps min distance in meters. If true, execute a Rest call to retrieve POIs (Point of Interest); obviously each POI contains its geographic position informations (latitude and longitude).</li><li>For each POI included in a maximum radius in meters from the user, collect all the informations retrieved from the Rest service and calculate informations of distance and bearing by user geolocation; these informations are inserted in a pin structure, populating an array of pins.</li><li>At the arrive of orientation sensor fusion data, for each pin included in the camera Field Of View (FOV) (calculated by previous bearing informations retrieved), some on screen displacement infos are calculated and inserted in a spot structure populating a spot array.</li><li>Finally, each spot of the spot array is drawn on the view as camera background overlay.</li></ol>",
    "ABOUT_ME": "Simone Colazzo is a software developer specialized in hybrid mobile development.<br>Graduated in Computer Science at the Sapienza University of Rome, he starts the professional career in October 2014 as back-end developer using Java J2EE as main programming language.<br> Interested to computer graphics, he soon discovered that back-end development, too far from the user experience, was not his way. So after having specialized in the developing of Web interfaces, he became definitely a front-end developer, first working on old technologies (as JSP with JSTL library), then working on Angular based website.<br>He's now a hybrid mobile developer principally developing with Ionic framework (version 3 and 4), and Cordova framework.",
    "INTERNAL_AR_ERROR": "An error occurred with augmented reality system",
    "SENSORS_ERROR": "Augmented reality service not supported on this device",
    "GPS_NOT_ENABLED": "Please enable gps service to let the correct functionalities of ar system",
    "LOCATION_PERMISSION_NOT_GRANTED": "Please authorize requested services permissions to let the correct functionalities of ar system",
    "CAMERA_PERMISSION_NOT_GRANTED": "Please authorize requested services permissions to let the correct functionalities of ar system",
    "CAMERA_SYSTEM_NOT_FOUND": "An error occurred with the device camera system. Augmented reality system can't be enabled",
    "LOCATION_SERVICE_DISABLED": "Please enable gps system to let the correct functionalities of ar system",
    "CONNECTION_ERROR_ON_RETRIEVE": "An error occured retrieving data. Please verify your connection"
}